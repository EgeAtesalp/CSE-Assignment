plugins {
    id 'com.google.protobuf' version '0.8.11'
    id 'idea'
    id 'application'
    id 'java'
}

repositories {
    mavenCentral()
    mavenLocal()
}

description = 'Comment Service'
group = "commentservice"
version = "0.1.0-SNAPSHOT"

def grpcVersion = "1.26.0"
def protocVersion = "3.11.4"


dependencies {
        implementation "com.google.api.grpc:proto-google-common-protos:1.17.0",
                "io.grpc:grpc-protobuf:${grpcVersion}",
                "io.grpc:grpc-stub:${grpcVersion}",
                "io.grpc:grpc-netty:${grpcVersion}",
                "io.grpc:grpc-services:${grpcVersion}",
                "javax.annotation:javax.annotation-api:1.3.2"

}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
        ofSourceSet('main')
    }
}

// Inform IDEs like IntelliJ IDEA, Eclipse or NetBeans about the generated code.
sourceSets {
    main {
        java {
            srcDirs 'hipstershop'
            srcDirs 'build/generated/source/proto/main/java/hipstershop'
            srcDirs 'build/generated/source/proto/main/grpc/hipstershop'
        }
    }
}

startScripts.enabled = false

task commentService(type: CreateStartScripts) {
    mainClassName = 'hipstershop.CommentService'
    applicationName = 'commentservice'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(commentService)
    fileMode = 0755
}
